<?php
// ; $Id: presse.info,v 1 2011/04/01 02:04:11 sun Exp $

/**
 * @file
 * Ajoute la liste des communiqués de presse
 */

/**
 * Implementation of hook_perm().
 */
function presse_perm() {
  return array('access communique de presse');
}

/*
 * Implementation of hook_menu
 */
function presse_menu() {
	global $language;
  $items = array();
	$presse = variable_get('presse_titre', array('fr' => 'Communiqué de presse', 'en' => 'Press Release'));

  $items['presse'] = array(
		'title' => $presse[$language->language],
    'page callback' => 'presse_communique_de_presse',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/*
 * Implementation of hook_form_alter
 * Cache le titre des blocs presse (remplacé par le champ $form['presse'])
 */
function presse_form_alter(&$form, &$form_state, $form_id) {
	switch ($form_id) {
		case 'block_admin_configure':
			if($form['delta']['#value'] == 'presse') {
				unset($form['block_settings']['title']);				
			}
		break;
	}
}

/*
 * Implementation of hook_block
 */
function presse_block($op = 'list', $delta = 0, $edit = array()) {

	global $base_url;
	global $language;

    switch ($op) {
		case 'list':
			$blocks['presse'] = array(
				'info' => t('Press Release'),
				'status' => 1,
				'region' => 'footer',
			);
			return $blocks;
		break;
		
		case 'configure':
			$press = variable_get('presse_titre', array());
			$form['presse_fr'] = array(
				'#type' => 'textfield',
				'#title' => t('Block title in french'),
				'#default_value' => $press['fr'],
			);
			$form['presse_en'] = array(
				'#type' => 'textfield',
				'#title' => t('Block title in english'),
				'#default_value' => $press['en'],
			);
			return $form;
			
		break;
		
		case 'save':
			$presse = array();
			$presse['fr'] = $edit['presse_fr'];
			$presse['en'] = $edit['presse_en'];
			variable_set('presse_titre', $presse);
		break;
		
		case 'view':
			switch ($delta) {
				case 'presse':
					
					global $language;
					
					$presse = variable_get('presse_titre', array('fr' => 'Communiqué de presse', 'en' => 'Press Release'));
					
					$subject = l($presse[$language->language], 'presse');
					
					$q = "	SELECT N.nid 
							FROM {node} AS N, {content_type_communique} AS CTP 
							WHERE N.type = '%s'
								AND CTP.field_pied_de_page_communique_value = '%s'
								AND N.nid = CTP.nid
								AND N.status = %d 
								AND (N.language = '' OR N.language = '%s' )
								ORDER BY N.sticky DESC LIMIT %d";
									
					$footerMaxLignes = variable_get('footerMaxLignes', 5);
					$r = db_query($q, array('communique', 'oui', 1, $language->language, $footerMaxLignes));

					$items = array();
					
					while ($pdf = db_fetch_array($r)) {
						$c = node_load(array('nid' => $pdf['nid']));
   						foreach ($c->files as $pdfFile) {
   						   if($pdfFile->filesize > 1000000){
                           $filesize = round($pdfFile->filesize/1000000);
                           $filesize .= "Mo";
   						   }else if ($pdfFile->filesize > 1000){
                           $filesize = round($pdfFile->filesize/1000);
                           $filesize .= "Ko"; 
   						   }else{
   						      $filesize .= "o"; 
   						   }
                        $filetype = explode('/', $pdfFile->filemime);
                        $title_attr = $filesize.', '.$filetype[1];
   							$items[] = l($c->title, $pdfFile->filepath, $options = array('language' => 'neutral', 'attributes' => array('target' => '_blank', 'title' => $c->title.' - '.$title_attr)));
   						}
   					}
					
					$content = theme_item_list($items, $title = NULL, $type = 'ul');
					
					$block['subject'] = $subject;
					$block['content'] =	$content;
 
				break;
			}
			return $block;

		break;
	}
}

/**
* Construit l'arbre de taxonomie
*/
function presse_constructTax($tree = array(), $parent = 0, $tree_temp = array()) 
{
	global $language;
	
	if ($language->language == 'fr') {
		$id_taxo = 5;
	} else {
		$id_taxo = 17;
	}

	if (!$tree) {
		$tree = taxonomy_get_tree($id_taxo, $parent = 0, $depth = -1, $max_depth = NULL);
	}
	
	$terms = array();

	foreach ($tree as $term) {
		if ($term->parents[0] == $parent) {
		
			$terms[$term->tid] = array(
				'name' => $term->name,
				'pdfs' => array(),
				'list' => '',
				'count' => 0
			);
			
			$q = ' SELECT N.nid 
					FROM {term_node} AS TN, {node} AS N
					WHERE N.nid = TN.nid
						AND N.status = %d
						AND TN.tid = %d 
						ORDER BY N.sticky DESC ';
			$r = db_query($q, 1, $term->tid);
			
			while($row = db_fetch_array($r)){
				$terms[$term->tid]['pdfs'][] = $row['nid'];
			}
			
			/* On intègre les thèmes directement ici */
			if(count($terms[$term->tid]['pdfs']) > 0) {
				$items = array();
				$count = 0;
				foreach ($terms[$term->tid]['pdfs'] as $nid) {
					$c  = node_load(array('nid' => $nid));
					foreach ($c->files as $pdfFile) {
					   if($pdfFile->filesize > 1000000){
                     $filesize = round($pdfFile->filesize/1000000);
                     $filesize .= "Mo";
					   }else if ($pdfFile->filesize > 1000){
                     $filesize = round($pdfFile->filesize/1000);
                     $filesize .= "Ko"; 
					   }else{
					      $filesize .= "o"; 
					   }
                  $filetype = explode('/', $pdfFile->filemime);
                  $title_attr = $filesize.', '.$filetype[1];

						$l = '<div class="pdf-link">';
						$l .= l($c->title, $pdfFile->filepath, $options = array('language' => 'neutral', 'attributes' => array('target' => '_blank', 'title' => $c->title.' - '.$title_attr, 'class' => 'couleur-principale', 'html' => true)));
						$l .= '</div>';
						$d = '<div class="pdf-desc">'.$c->field_commentaire_communique[0]['value'].'</div>';
						if($count%2 == 0){
							$items[] = array( 'data' => $l.$d, 'class' => 'even presse clearfix' );
						}else{
							$items[] = array( 'data' => $l.$d, 'class' => 'odd presse clearfix' );
						}
						$count++;
					}
				}
				$list = theme_item_list($items, $title = NULL, $type = 'ul');
				$terms[$term->tid]['list'] = $list;
				$terms[$term->tid]['count'] = $count;
			}
			
		} else {
			$tree_temp[$term->parents[0]][$term->tid] = $term;
		}
	}
	
	if (is_array($terms)) {
		foreach ($terms as $tid => &$term) {
			if (isset($tree_temp[$tid])) {
				$term['children'] = presse_constructTax($tree_temp[$tid], $tid, $tree_temp);
			}
		}
	}
	
	if ($parent) {
		return $terms;
	}
	
	return $terms;
}

/**
* Construit la liste des communiqué de presse
*/
function presse_communique_de_presse() 
{
	global $language;
	menu_cache_clear('primary');
	drupal_add_js("misc/collapse.js", 'core');

	$taxContent = presse_constructTax();
	
	foreach($taxContent as $value) {
		$inter = theme_liste_communique($value);
		$content .= $inter['content'];
	}
	
	$presse = variable_get('presse_titre', array('fr' => 'Communiqué de presse', 'en' => 'Press Release'));
	$title = $presse[$language->language];
	$page_content = theme('communique_de_presse', $content, $title);
	
	return $page_content;	
}

/**
 * Implementation of hook_theme().
 */
function presse_theme($existing, $type, $theme, $path) {
	return array(
		'communique_de_presse' => array(
			'template' => 'communique-de-presse',
			'arguments' => array('content' => NULL, 'title' => NULL)
		)
	);
}

/**
*Génère le thème pour  "presse" 
*/
function theme_liste_communique($value, $niv = 1)
{
	//fieldset Value
	if(count($value['children'])) {
		foreach($value['children'] as $children) {
			$inter = theme_liste_communique($children, $niv + 1);
			$theme .= $inter['content'];
			$value['count'] += $inter['count'];
		}
		$fieldsetValue = $value['list'].$theme;
	} else {
		$fieldsetValue = $value['list'];
	}

	//fieldset Name
	if($value['count'] > 0) {
		$number = '&nbsp;('.$value['count'].' ';
		$value['count'] > 1 ? $number .= t('files').')' : $number .= t('file').')';
		$fieldsetTitle = $value['name'].$number;
	} else {
		$fieldsetTitle = $value['name'];
		return;
	}
	
	$h = $niv + 1;
	$content = '<div class="niveau'.$niv.' listesp collapsible collapsed clearfix">';
   $content .= '<h'.$h.'>'.$value['name'].$number.'</h'.$h.'>';
	$content .= $fieldsetValue;
	$content .= '</div>';
	
	return array('content' => $content, 'count' => $value['count']);
}

